name: Deploy Blood Bank System to AWS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1 # CHANGE this to your desired AWS Region
      S3_DASHBOARD_BUCKET: blood-bank-dashboard # REPLACE with your S3 bucket name

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          pip install aws-sam-cli boto3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: SAM Build
        run: sam build --template template.yaml

      - name: SAM Deploy (Backend)
        id: sam_deploy
        # Deploy on a single line to avoid shell errors and includes --resolve-s3
        run: sam deploy --template-file .aws-sam/build/template.yaml --stack-name BloodBankStack --region ${{ env.AWS_REGION }} --capabilities CAPABILITY_IAM --no-confirm-changeset --no-fail-on-empty-changeset --resolve-s3
      
      - name: Get API Endpoint URL
        id: get_api_url
        run: |
          API_URL=$(aws cloudformation describe-stacks --stack-name BloodBankStack --query 'Stacks[0].Outputs[?OutputKey==`ApiUrl`].OutputValue' --output text)
          echo "Retrieved API URL: $API_URL"
          echo "API_URL=$API_URL" >> $GITHUB_OUTPUT

      - name: Inject API URL into Frontend Script
        # Updates script.js with the live URL
        run: |
          API_BASE_URL="${{ steps.get_api_url.outputs.API_URL }}"
          echo "Updating script.js with base URL: $API_BASE_URL"
          
          # This command injects the live URL into your script.js placeholder
          sed -i "s|const BASE_API_URL = 'https://PLACEHOLDER_URL_HERE/dev/';|const BASE_API_URL = '$API_BASE_URL';|" frontend/script.js
          
          # Clean up any potential double quotes or trailing slashes
          sed -i "s|'\"|'|g" frontend/script.js

      - name: Deploy Frontend to S3 (Static Hosting)
        # Syncs the updated script.js and all other frontend files to the S3 bucket
        run: |
          aws s3 sync ./frontend/ s3://${{ env.S3_DASHBOARD_BUCKET }}/ --delete
          # Sets Cache-Control headers for index.html to force fresh script load
          aws s3 cp s3://${{ env.S3_DASHBOARD_BUCKET }}/index.html s3://${{ env.S3_DASHBOARD_BUCKET }}/index.html --metadata-directive REPLACE --cache-control max-age=0 --content-type text/html